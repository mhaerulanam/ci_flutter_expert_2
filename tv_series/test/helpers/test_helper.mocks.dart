// Mocks generated by Mockito 5.1.0 from annotations
// in tv_series/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i30;

import 'package:common/common/failure.dart' as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i17;
import 'package:tv_series/data/datasources/db/database_helper_tv_series.dart'
    as _i16;
import 'package:tv_series/data/datasources/tv_series_local_data_source.dart'
    as _i14;
import 'package:tv_series/data/datasources/tv_series_remote_data_source.dart'
    as _i12;
import 'package:tv_series/data/models/episode_response.dart' as _i4;
import 'package:tv_series/data/models/tv_series_detail_model.dart' as _i3;
import 'package:tv_series/data/models/tv_series_model.dart' as _i13;
import 'package:tv_series/data/models/tv_series_table.dart' as _i15;
import 'package:tv_series/domain/entities/episode.dart' as _i11;
import 'package:tv_series/domain/entities/tv_series.dart' as _i9;
import 'package:tv_series/domain/entities/tv_series_detail.dart' as _i10;
import 'package:tv_series/domain/repositories/tv_series_repository.dart' as _i5;
import 'package:tv_series/domain/usecases/get_popular_tv_series.dart' as _i21;
import 'package:tv_series/domain/usecases/get_top_rated_tv_series.dart' as _i22;
import 'package:tv_series/domain/usecases/get_tv_episode.dart' as _i23;
import 'package:tv_series/domain/usecases/get_tv_on_the_air.dart' as _i26;
import 'package:tv_series/domain/usecases/get_tv_series_detail.dart' as _i24;
import 'package:tv_series/domain/usecases/get_tv_series_recommendations.dart'
    as _i25;
import 'package:tv_series/domain/usecases/get_watchlist_status_tv_series.dart'
    as _i18;
import 'package:tv_series/domain/usecases/get_watchlist_tv_series.dart' as _i28;
import 'package:tv_series/domain/usecases/remove_watchlist_tv_series.dart'
    as _i20;
import 'package:tv_series/domain/usecases/save_watchlist_tv_series.dart'
    as _i19;
import 'package:tv_series/domain/usecases/search_tv.dart' as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeDetailTvSeriesModel_1 extends _i1.Fake
    implements _i3.DetailTvSeriesModel {}

class _FakeEpisodeResponse_2 extends _i1.Fake implements _i4.EpisodeResponse {}

class _FakeTvSeriesRepository_3 extends _i1.Fake
    implements _i5.TvSeriesRepository {}

class _FakeResponse_4 extends _i1.Fake implements _i6.Response {}

class _FakeStreamedResponse_5 extends _i1.Fake implements _i6.StreamedResponse {
}

/// A class which mocks [TvSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRepository extends _i1.Mock
    implements _i5.TvSeriesRepository {
  MockTvSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> getTvOnTheAir() =>
      (super
              .noSuchMethod(Invocation.method(#getTvOnTheAir, []),
                  returnValue:
                      Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                          _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>
      getPopularTvSeries() =>
          (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
                  returnValue:
                      Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                          _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
              as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>
      getTopRatedTvSeries() =>
          (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
                  returnValue:
                      Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                          _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
              as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.DetailTvSeries>> getTvSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesDetail, [id]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, _i10.DetailTvSeries>>.value(
                      _FakeEither_0<_i8.Failure, _i10.DetailTvSeries>()))
          as _i7.Future<_i2.Either<_i8.Failure, _i10.DetailTvSeries>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>
      getTvSeriesRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvSeriesRecommendations, [id]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlistTvSeries(
          _i10.DetailTvSeries? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistTvSeries, [movie]),
              returnValue: Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>()))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlistTvSeries(
          _i10.DetailTvSeries? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTvSeries, [movie]),
              returnValue: Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>()))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlistTvSeries(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlistTvSeries, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>
      getWatchlistTvSeries() =>
          (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
                  returnValue:
                      Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                          _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
              as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i11.Episode>>> getTvEpisode(
          int? idTv, int? idEpisode) =>
      (super.noSuchMethod(Invocation.method(#getTvEpisode, [idTv, idEpisode]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i11.Episode>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i11.Episode>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i11.Episode>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> searchTv(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTv, [query]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [TvSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesRemoteDataSource extends _i1.Mock
    implements _i12.TvSeriesRemoteDataSource {
  MockTvSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i13.TvSeriesModel>> getTvOnTheAir() => (super.noSuchMethod(
          Invocation.method(#getTvOnTheAir, []),
          returnValue:
              Future<List<_i13.TvSeriesModel>>.value(<_i13.TvSeriesModel>[]))
      as _i7.Future<List<_i13.TvSeriesModel>>);
  @override
  _i7.Future<List<_i13.TvSeriesModel>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
          returnValue: Future<List<_i13.TvSeriesModel>>.value(
              <_i13.TvSeriesModel>[])) as _i7.Future<List<_i13.TvSeriesModel>>);
  @override
  _i7.Future<List<_i13.TvSeriesModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
          returnValue: Future<List<_i13.TvSeriesModel>>.value(
              <_i13.TvSeriesModel>[])) as _i7.Future<List<_i13.TvSeriesModel>>);
  @override
  _i7.Future<_i3.DetailTvSeriesModel> getTvSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesDetail, [id]),
              returnValue: Future<_i3.DetailTvSeriesModel>.value(
                  _FakeDetailTvSeriesModel_1()))
          as _i7.Future<_i3.DetailTvSeriesModel>);
  @override
  _i7.Future<List<_i13.TvSeriesModel>> getTvSeriesRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesRecommendations, [id]),
          returnValue: Future<List<_i13.TvSeriesModel>>.value(
              <_i13.TvSeriesModel>[])) as _i7.Future<List<_i13.TvSeriesModel>>);
  @override
  _i7.Future<_i4.EpisodeResponse> getTvEpisode(int? idTv, int? season) =>
      (super.noSuchMethod(Invocation.method(#getTvEpisode, [idTv, season]),
              returnValue:
                  Future<_i4.EpisodeResponse>.value(_FakeEpisodeResponse_2()))
          as _i7.Future<_i4.EpisodeResponse>);
  @override
  _i7.Future<List<_i13.TvSeriesModel>> searchTv(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTv, [query]),
          returnValue: Future<List<_i13.TvSeriesModel>>.value(
              <_i13.TvSeriesModel>[])) as _i7.Future<List<_i13.TvSeriesModel>>);
}

/// A class which mocks [TvSeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesLocalDataSource extends _i1.Mock
    implements _i14.TvSeriesLocalDataSource {
  MockTvSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlistTvSeries(_i15.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
          Invocation.method(#insertWatchlistTvSeries, [tvSeries]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchlistTvSeries(_i15.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(
          Invocation.method(#removeWatchlistTvSeries, [tvSeries]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i15.TvSeriesTable?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
              returnValue: Future<_i15.TvSeriesTable?>.value())
          as _i7.Future<_i15.TvSeriesTable?>);
  @override
  _i7.Future<List<_i15.TvSeriesTable>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
          returnValue: Future<List<_i15.TvSeriesTable>>.value(
              <_i15.TvSeriesTable>[])) as _i7.Future<List<_i15.TvSeriesTable>>);
}

/// A class which mocks [DatabaseHelperTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelperTvSeries extends _i1.Mock
    implements _i16.DatabaseHelperTvSeries {
  MockDatabaseHelperTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i17.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i17.Database?>.value())
          as _i7.Future<_i17.Database?>);
  @override
  _i7.Future<int> insertWatchlist(_i15.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tvSeries]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> removeWatchlist(_i15.TvSeriesTable? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvSeries]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<Map<String, dynamic>?> getTvSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvSeriesById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i7.Future<Map<String, dynamic>?>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvSeries, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetWatchListStatusTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTvSeries extends _i1.Mock
    implements _i18.GetWatchListStatusTvSeries {
  MockGetWatchListStatusTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
}

/// A class which mocks [SaveWatchlistTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvSeries extends _i1.Mock
    implements _i19.SaveWatchlistTvSeries {
  MockSaveWatchlistTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> execute(
          _i10.DetailTvSeries? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>()))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvSeries extends _i1.Mock
    implements _i20.RemoveWatchlistTvSeries {
  MockRemoveWatchlistTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> execute(
          _i10.DetailTvSeries? tvSeries) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvSeries]),
              returnValue: Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither_0<_i8.Failure, String>()))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
}

/// A class which mocks [GetPopularTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTvSeries extends _i1.Mock
    implements _i21.GetPopularTvSeries {
  MockGetPopularTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [GetTopRatedTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvSeries extends _i1.Mock
    implements _i22.GetTopRatedTvSeries {
  MockGetTopRatedTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [GetTvEpisode].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvEpisode extends _i1.Mock implements _i23.GetTvEpisode {
  MockGetTvEpisode() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i11.Episode>>> execute(
          int? idTv, int? idEpisode) =>
      (super.noSuchMethod(Invocation.method(#execute, [idTv, idEpisode]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i11.Episode>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i11.Episode>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i11.Episode>>>);
}

/// A class which mocks [GetTvSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesDetail extends _i1.Mock implements _i24.GetTvSeriesDetail {
  MockGetTvSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.DetailTvSeries>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, _i10.DetailTvSeries>>.value(
                      _FakeEither_0<_i8.Failure, _i10.DetailTvSeries>()))
          as _i7.Future<_i2.Either<_i8.Failure, _i10.DetailTvSeries>>);
}

/// A class which mocks [GetTvSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesRecommendations extends _i1.Mock
    implements _i25.GetTvSeriesRecommendations {
  MockGetTvSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [GetTvOnTheAir].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvOnTheAir extends _i1.Mock implements _i26.GetTvOnTheAir {
  MockGetTvOnTheAir() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [SearchTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTv extends _i1.Mock implements _i27.SearchTv {
  MockSearchTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TvSeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvSeriesRepository_3()) as _i5.TvSeriesRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> execute(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [GetWatchlistTvSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTvSeries extends _i1.Mock
    implements _i28.GetWatchlistTvSeries {
  MockGetWatchlistTvSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i8.Failure, List<_i9.TvSeries>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TvSeries>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i6.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i6.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i6.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i30.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i30.Uint8List>.value(_i30.Uint8List(0)))
          as _i7.Future<_i30.Uint8List>);
  @override
  _i7.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_5()))
          as _i7.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
